SALDL_VERSION = `git describe --dirty`


COMMON_CFLAGS = -pipe -std=c99 -pedantic -Wall -Wextra -Wmissing-format-attribute -march=native -fPIC -D_FILE_OFFSET_BITS=64 -D_GNU_SOURCE -DHAVE_STRSIGNAL -DHAVE_STRCASESTR -DHAVE_MKDIR -DHAVE_CLOCK_MONOTONIC_RAW -DHAVE_SIGACTION -DHAVE_SIGADDSET -DSALDL_VERSION=\"$(SALDL_VERSION)\"
COMMON_LDFLAGS = -Wl,-O1,--sort-common,--as-needed,-z,relro,--hash-style=gnu
COMMON_LIBS = -lc -lpthread

OBJS = common.o log.o utime.o exit.o events.o progress.o resume.o status.o ctrl.o merge.o queue.o utils.o saldl.o
HEADERS = common.h log.h utime.h exit.h events.h progress.h resume.h status.h ctrl.h merge.h queue.h saldl.h saldl_params.h structs.h utils.h vt100.h

CC := gcc
LD := gcc

STRIP_FLAGS := --strip-all
#LTO_FLAGS := -flto

OPTIMIZE_FLAGS := -Ofast
DEBUG_FLAGS := -Og -ggdb -fvar-tracking-assignments -fno-omit-frame-pointer -fstack-protector-strong
FULL_DEBUG_FLAGS := ${DEBUG_FLAGS} -fsanitize=thread -fsanitize=undefined
PROFILE_FLAGS := ${DEBUG_FLAGS} -pg

all: prep saldl-shared-lib saldl-static-lib
debug-static-lib: prep-debug saldl-static-lib
debug-static: prep-debug saldl-static
debug-shared-lib: prep-debug saldl-shared-lib
#debug: prep-debug saldl-shared-lib saldl-static-lib saldl-static
debug: prep-debug saldl-shared-lib saldl-static-lib
full-debug: prep-full-debug saldl-shared-lib saldl-static-lib
debug-clang: prep-debug prep-clang saldl-shared-lib saldl-static-lib
profile: prep-profile saldl-shared-lib saldl-static-lib
optimize: prep-optimize saldl-shared-lib saldl-static-lib strip

prep:
	$(eval CFLAGS = ${COMMON_CFLAGS} ${LTO_FLAGS} ${CFLAGS})
	$(eval LDFLAGS = ${COMMON_LDFLAGS} ${LTO_FLAGS} ${LDFLAGS})
	$(eval LIBS = ${COMMON_LIBS} ${LIBS})

prep-debug: prep
	$(eval CFLAGS += ${DEBUG_FLAGS})

prep-full-debug: prep
	$(eval CFLAGS += ${FULL_DEBUG_FLAGS})

prep-clang:
	$(eval CFLAGS += -O0)
	$(eval CC = clang)
	$(eval LD = clang -v)

prep-profile: prep
	$(eval CFLAGS += ${PROFILE_FLAGS})

prep-optimize: prep
	$(eval CFLAGS += ${OPTIMIZE_FLAGS})

*.o: ${@:.o=.c} $(HEADERS)
	${CC} -c ${@:.o=.c} -o ${@} ${CFLAGS}

libsaldl.a: $(OBJS)
	${AR} rs -o libsaldl.a ${OBJS}

libsaldl.so: $(OBJS)
	${LD} -o libsaldl.so -shared ${LDFLAGS} -Wl,-soname=libsaldl.so ${OBJS} ${LIBS} -lcurl -levent_pthreads -levent

saldl-static-lib: libsaldl.a main.o
	${CC} -o saldl-static-lib main.o libsaldl.a ${CFLAGS} ${LDFLAGS} -pie ${LIBS} -lcurl -levent_pthreads -levent

saldl-static: libsaldl.a main.o
	${CC} -o saldl-static main.o libsaldl.a ${CFLAGS} ${LDFLAGS} ${LIBS} `curl-config --static-libs`

saldl-shared-lib: libsaldl.so main.o
	${CC} -o saldl-shared-lib main.o ${CFLAGS} ${LDFLAGS} -pie -L./ -lsaldl -Wl,--rpath,${PWD} -lcurl -levent_pthreads -levent

strip: libsaldl.so libsaldl.a saldl-static-lib saldl-shared
	strip ${STRIP_FLAGS} $?

clean:
	-rm -f $(OBJS) main.o libsaldl.a libsaldl.so saldl-shared-lib saldl-static-lib saldl-static
